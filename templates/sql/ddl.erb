<% schema_set.schemas.each do |schema| %>
<%= banner("DDL for Schema '#{schema.name}'") %>
<% schema.object_types.each do |object_type| %>
CREATE TABLE <%= object_type.sql.table_name %>(
<% object_type.attributes.each do |a|
%>  <%= q(a.sql.column_name) %> <%= q(a.sql.sql_type) %> <%= a.length.nil? ? '' : "(#{a.length}) " %><%= a.sql.identity? ? 'IDENTITY(1,1) ' : '' %><%= a.nullable? ? '': 'NOT '%>NULL,
<% end
%>  CONSTRAINT PK_<%= object_type.name %> PRIMARY KEY <%= (object_type.sql.indexes.select{|i| i.cluster?}.size == 0) ? '' : 'NON' %>CLUSTERED (<%= q(object_type.primary_key.sql.column_name) %> ASC)
)
GO
<% object_type.sql.indexes.each do |index| %>
CREATE <%= index.unique? ? 'UNIQUE ' : '' %><%= index.cluster? ? '' : 'NON' %>CLUSTERED INDEX [<%= index.name %>] ON <%= object_type.sql.table_name %>
(<%= index.attribute_names.collect {|a| "\n  #{q(a)} ASC" }.join(",") %>
)
GO
<% end %>
<% object_type.attributes.each do |a|
    if a.reference? %>
ALTER TABLE <%= object_type.sql.table_name %>
  ADD CONSTRAINT [FK_<%= object_type.name %>_<%= a.sql.column_name %>] FOREIGN KEY (<%= q(a.sql.column_name) %>)
  REFERENCES <%= a.referenced_object.sql.table_name %> (<%= q(a.referenced_object.primary_key.sql.column_name) %>)
<%
    end 
  end
%>
<% end %>
<% end %>