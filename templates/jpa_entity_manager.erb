package <%= schema.java.package %>;

import javax.persistence.EntityManager;

public final class UnitEntityManager
{
   private static final ThreadLocal<EntityManager> c_entityManagerThreadLocal =
      new ThreadLocal<EntityManager>();

   public static void bind( final EntityManager entityManager )
   {
      if ( null != c_entityManagerThreadLocal.get() )
      {
         throw new IllegalStateException( "UnitEntityManager.bind invoked without unbinding previous entity manager" );
      }
      c_entityManagerThreadLocal.set( entityManager );
   }

   public static void unbind( final EntityManager entityManager )
   {
      if ( null == c_entityManagerThreadLocal.get() )
      {
         throw new IllegalStateException( "UnitEntityManager.unbind invoked with no previous entity manager" );
      }
      if ( entityManager != c_entityManagerThreadLocal.get() )
      {
         throw new IllegalStateException( "UnitEntityManager.unbind invoked with entity manager that differs from bound entity manager" );
      }
      c_entityManagerThreadLocal.set( null );
   }

   static EntityManager get()
   {
      final EntityManager entityManager = c_entityManagerThreadLocal.get();
      if ( null == entityManager )
      {
         throw new IllegalStateException( "UnitEntityManager.get invoked when no entity manager bound" );
      }
      return entityManager;
   }
}
