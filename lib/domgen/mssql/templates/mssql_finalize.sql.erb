/* DO NOT EDIT: File is auto-generated */
<% data_module.entities.select{|entity| entity.concrete? && entity.sql?}.each do |entity| %>
<% entity.sql.indexes.select{|index| index.defer_creation?}.each do |index| %>
CREATE <%= index.unique? ? 'UNIQUE ' : '' %><%= index.gist? ? 'SPATIAL' : index.cluster? ? 'CLUSTERED' : 'NONCLUSTERED' %> INDEX <%= index.quoted_index_name %> ON <%= entity.sql.qualified_table_name %>
(<%= index.attribute_names.collect {|a| "\n  #{entity.attribute_by_name(a).sql.quoted_column_name} #{index.ordered? ? 'ASC' : '' }" }.join(',') %>
)<% if !index.include_attribute_names.empty? %> INCLUDE ( <%= index.include_attribute_names.collect {|a| entity.attribute_by_name(a).sql.quoted_column_name }.join(',') %> )<% end %>
<% if index.filter %>WHERE <%= index.filter %><% end %>
WITH (ALLOW_PAGE_LOCKS=<%= index.allow_page_locks? ? 'ON' : 'OFF'%>)
<%= index.unique? ? 'ON [PRIMARY]' : '' %>
GO
<% index.tags.each_pair do |name, value| %>
EXEC sys.sp_addextendedproperty
  @name = N'<%= sql_extended_property_key(name) %>',
  @value = N'<%= sql_extended_property_value(data_module, value) %>',
  @level0type = N'SCHEMA', @level0name = <%= data_module.sql.quoted_schema %>,
  @level1type = N'TABLE',  @level1name = <%= entity.sql.quoted_table_name %>,
  @level2type = N'INDEX',  @level2name = <%= index.quoted_index_name %>;
GO
<% end %>

<% end
%>
<% entity.sql.foreign_keys.each do |foreign_key| %>
<% if foreign_key.defer_creation? -%>
ALTER TABLE <%= entity.sql.qualified_table_name %>
  WITH NOCHECK ADD CONSTRAINT [<%= foreign_key.foreign_key_name %>] FOREIGN KEY (<%= foreign_key.attribute_names.collect{|a| entity.attribute_by_name(a).sql.quoted_column_name}.join(', ') %>)
  REFERENCES <%= foreign_key.referenced_entity.sql.qualified_table_name %> (<%= foreign_key.referenced_attribute_names.collect{|a| foreign_key.referenced_entity.attribute_by_name(a).sql.quoted_column_name}.join(', ')  %>)
<% if foreign_key.on_update != :no_action -%>
  ON UPDATE <%= Domgen::Sql::ForeignKey::ACTION_MAP[foreign_key.on_update] %>
<% end -%>
<% if foreign_key.on_delete != :no_action -%>
  ON DELETE <%= Domgen::Sql::ForeignKey::ACTION_MAP[foreign_key.on_delete] %>
<% end -%>
GO
<% end -%>
ALTER TABLE <%= entity.sql.qualified_table_name %> WITH <%= foreign_key.check_constraint_on_finalize? ? '' : 'NO' %>CHECK CHECK CONSTRAINT <%= foreign_key.quoted_foreign_key_name %>
GO
<%
   end
   entity.sql.constraints.each do |constraint|
%>
ALTER TABLE <%= entity.sql.qualified_table_name %> WITH <%= constraint.check_constraint_on_finalize? ? '' : 'NO' %>CHECK CHECK CONSTRAINT <%= constraint.quoted_constraint_name %>
GO
<%
   end
  entity.sql.function_constraints.each do |constraint|
%>
ALTER TABLE <%= entity.sql.qualified_table_name %> WITH <%= constraint.check_constraint_on_finalize? ? '' : 'NO' %>CHECK CHECK CONSTRAINT <%= constraint.quoted_constraint_name %>
GO
<%
   end
   entity.sql.triggers.each do |trigger|
%>
ENABLE TRIGGER <%= trigger.qualified_trigger_name %> ON <%= entity.sql.qualified_table_name %>
GO
<%
   end
   if entity.mssql? && entity.mssql.sequence_table?
%>
DECLARE @SeqValue INT
SELECT @SeqValue = Value FROM <%= entity.sql.qualified_table_name %>
IF ( @SeqValue IS NULL )
  BEGIN
    INSERT INTO <%= entity.sql.qualified_table_name %>(Name, Value) VALUES ( '<%= entity.mssql.sequence_key %>', 1 )
  END
GO
<%
   end
  end
%>
