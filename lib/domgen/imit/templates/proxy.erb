/* DO NOT EDIT: File is auto-generated */
package <%= service.data_module.imit.service_package %>;

@SuppressWarnings( { "UnusedDeclaration", "JavaDoc", "unchecked" } )
public class <%= service.imit.proxy_name %>
  implements <%= service.imit.name %>
{
  @javax.inject.Inject
  private <%= service.gwt.qualified_async_service_name %> _service;
  @javax.inject.Inject
  private org.realityforge.replicant.client.EntityRepository _repository;
  @javax.inject.Named("GLOBAL")
  @javax.inject.Inject
  @javax.annotation.Nullable
  private com.google.gwt.user.client.rpc.AsyncCallback _callback;

<% service.methods.each do |method|
   method_name = Domgen::Naming.camelize(method.imit.name.to_s)
%>
  public void <%= method_name %>(<%= method.parameters.collect{|p| "#{annotated_type(p, :imit)} #{Domgen::Naming.camelize(p.imit.name)}" }.join(', ') %>)<%=
    method.exceptions.empty? ? '' : "\n    throws #{method.exceptions.collect{|e| e.imit.qualified_name}.join(', ')}"
%>
  {
    <%= method_name %>(<%= (method.parameters.collect{|p| Domgen::Naming.camelize(p.imit.name) } + ["null"]).join(', ') %>);
  }

  public void <%= method_name %>(<%= (method.parameters.collect{|p| "#{annotated_type(p, :imit)} #{Domgen::Naming.camelize(p.imit.name)}" } + ["final @javax.annotation.Nullable com.google.gwt.user.client.rpc.AsyncCallback<#{method.return_value.imit.non_primitive_java_type}> callback"]).join(', ') %>)<%=
    method.exceptions.empty? ? '' : "\n    throws #{method.exceptions.collect{|e| e.imit.qualified_name}.join(', ')}"
%>
  {
  _service.<%= method.gwt.name %>(<%= method.parameters.collect do |parameter|
  param_name = Domgen::Naming.camelize(parameter.imit.name)
  param_value = param_name
  if parameter.parameter_type == :enumeration && parameter.enumeration.numeric_values?
    param_value = "#{param_name}.ordinal()"
  elsif parameter.parameter_type == :enumeration && parameter.enumeration.textual_values?
    param_value = "#{param_name}.name()"
  elsif parameter.reference?
    param_value = "#{param_name}.get#{parameter.referenced_entity.primary_key.imit.name}()"
  end
  if parameter.nullable?
    param_value = "null == #{param_name} ? null : #{param_value}"
  end
  param_value
end.join(', ') %><%= method.parameters.empty? ? '' : ', ' %>new com.google.gwt.user.client.rpc.AsyncCallback<<%= method.return_value.imit.non_primitive_java_type(:transport) %>>()
    {
    public void onFailure( final Throwable caught )
    {
      if( null != callback ) callback.onFailure( caught );
      if( null != _callback ) _callback.onFailure( caught );
    }

    public void onSuccess( final <%= method.return_value.imit.non_primitive_java_type(:transport) %> result )
    {
<%
    result_string = "result"
    if method.return_value.enumeration? && method.return_value.enumeration.numeric_values?
      result_string = "#{method.return_value.imit.java_type}.values()[ result ]"
    elsif method.return_value.enumeration? && method.return_value.enumeration.textual_values?
      result_string = "#{method.return_value.imit.java_type}.valueOf( result )"
    elsif method.return_value.reference?
      result_string = "_repository.getByID( #{method.return_value.referenced_entity.imit.qualified_name}.class, result )"
    end
    if method.return_value.nullable?
      result_string = "null == result ? null : #{result_string}"
    end
%>
      if( null != callback ) callback.onSuccess( <%= result_string %> );
      if( null != _callback ) _callback.onSuccess( result );
    }
  });
  }

<% end %>}
