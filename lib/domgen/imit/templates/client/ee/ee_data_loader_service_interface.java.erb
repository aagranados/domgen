/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.imit.qualified_ee_data_loader_service_interface_name) %>;

@java.lang.SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
public interface <%= repository.imit.ee_data_loader_service_interface_name %>
  extends org.realityforge.replicant.client.transport.DataLoaderService
{
<%
  repository.imit.graphs.each do |graph|
  key = "#{repository.imit.qualified_graph_enum_name}.#{Reality::Naming.uppercase_constantize(graph.name)}"
  graph_id = 'null'
  cache_key = 'null'
  graph_id_param = nil
  if graph.instance_root?
    entity = repository.entity_by_name(graph.instance_root)
    graph_id = "#{Reality::Naming.camelize(entity.name)}#{entity.primary_key.name}"
    graph_id_param = "final #{Domgen::Java.java_type(entity.primary_key, :gwt, :default)} #{graph_id}"
  elsif graph.cacheable?
    cache_key = "#{key}.name()"
  end
  filter_type = graph.filter_parameter ? "#{nullability_annotation(graph.filter_parameter.nullable?)} final #{Domgen::Java.java_type(graph.filter_parameter, :ee, :default)}" : nil
  filter_var = filter_type ? 'filter': 'null'
  filter_param = filter_type ? "#{filter_type} #{filter_var}" : nil
  std_param = '@javax.annotation.Nullable final Runnable action'
-%>
  default boolean isSubscribedTo<%= graph.name %>(<%= graph_id_param %>)
  {
    return isSubscribed( <%= key %><%= graph.instance_root? ? ", #{graph_id}" : '' %> );
  }

  default void subscribeTo<%= graph.name %>(<%= [graph_id_param, filter_param, std_param].compact.join(', ') %>)
  {
    requestSubscribe( <%= key %>, <%= graph_id %>, <%= cache_key %>, <%= filter_var %>, action);
  }

<% if graph.filter_parameter -%>
  default void update<%= graph.name %>Subscription(<%= [graph_id_param, filter_param, std_param].compact.join(', ') %>)
  {
    requestSubscriptionUpdate( <%= key %>, <%= graph_id %>, filter, action );
  }

<% end -%>
  default void unsubscribeFrom<%= graph.name %>(<%= [graph_id_param, std_param].compact.join(', ') %>)
  {
    requestUnsubscribe( <%= key %>, <%= graph_id %>, action );
  }
<% end -%>
}
