/* DO NOT EDIT: File is auto-generated */
package <%= service.data_module.ejb.service_package %>;

@SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
<% if service.jws.cxf_annotations? && service.tags[:Description] -%>
@org.apache.cxf.annotations.WSDLDocumentationCollection({
  @org.apache.cxf.annotations.WSDLDocumentation("<%= service.tags[:Description] %>")
})
<% end -%>
@javax.jws.WebService( name= "<%= service.jws.web_service_name %>", serviceName = "<%= service.jws.service_name %>", portName = "<%= service.jws.port_name %>" )
@javax.jws.soap.SOAPBinding( style = javax.jws.soap.SOAPBinding.Style.DOCUMENT,
                             use = javax.jws.soap.SOAPBinding.Use.ENCODED,
                             parameterStyle = javax.jws.soap.SOAPBinding.ParameterStyle.WRAPPED )
@com.sun.xml.internal.ws.developer.SchemaValidation
public class <%= service.jws.boundary_implementation_name %>
{
  @javax.ejb.EJB
  private <%= service.ejb.qualified_boundary_interface_name %> _service;

<% service.methods.each do |method|
%>  @javax.jws.WebMethod( operationName = "<%= method.name %>" )
  <%= service.jws.cxf_annotations? && method.tags[:Description] ? "@org.apache.cxf.annotations.WSDLDocumentation(\"#{method.tags[:Description]}\")" : "" %>
  public <%= annotated_type(method.return_value, :jws, :boundary) %> <%= Domgen::Naming.camelize(method.name) %>(<%= method.parameters.collect{|p| "final @javax.jws.WebParam( name = \"#{p.name}\", mode = javax.jws.WebParam.Mode.IN, header = false ) #{annotated_type(p, :jws, :boundary)} #{p.name}" }.join(', ') %>)<%=
    method.exceptions.empty? ? '' : "\n    throws #{method.exceptions.collect{|e| e.ee.qualified_name}.join(', ')}"
%><%
  return_prefix = method.return_value.return_type == :void ? '' : 'return '
%>
  {
    <%= return_prefix  %>_service.<%= Domgen::Naming.camelize(method.name) %>(<%= method.parameters.collect {|parameter| parameter.name }.join(', ') %>);
  }

<% end %>}
