/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.ee.qualified_abstract_app_server_name) %>;

@javax.annotation.Generated( "Domgen" )
public abstract class <%= repository.ee.abstract_app_server_name %>
  extends org.realityforge.guiceyloops.server.glassfish.AbstractAppServer
{
  private static final String APP_NAME = "<%= Domgen::Naming.underscore(repository.name) %>";

  @java.lang.Override
  protected String getContextRoot()
  {
    return "/" + APP_NAME;
  }

<%
  repository.data_modules.select{|dm|dm.jws?}.each do |data_module|
    data_module.services.select{|s|s.jws?}.each do |service|
-%>
  public final String get<%= service.data_module.name %><%= service.name %>EndpointAddress()
  {
    return getSiteURL() + "<%= service.jws.url %>";
  }
<%
    end
  end
-%>

<% if repository.jpa? -%>
  @java.lang.Override
  protected void configureGlassFish( @javax.annotation.Nonnull final org.realityforge.guiceyloops.server.glassfish.GlassFishContainer glassfish )
    throws Exception
  {
<% if repository.mssql? -%>
    glassfish.createSqlServerJdbcResource( <%= repository.jpa.qualified_unit_descriptor_name %>.RESOURCE_NAME );
<% else -%>
    glassfish.createPostgresJdbcResource( <%= repository.jpa.qualified_unit_descriptor_name %>.RESOURCE_NAME );
<% end -%>
  }

<% end -%>
  @java.lang.Override
  protected void performDeploy()
    throws Exception
  {
    getGlassfish().deploy( getContextRoot(), APP_NAME, org.realityforge.guiceyloops.server.glassfish.GlassFishContainerUtil.getWarFile() );
  }
}
