/* DO NOT EDIT: File is autogenerated */
package <%= schema.java.package %>;

import org.xml.sax.helpers.AttributesImpl;

@javax.annotation.Generated( "Domgen" )
@SuppressWarnings( { "UnusedDeclaration", "PointlessBooleanExpression", "ConstantConditions" } )
public class <%= schema.name %>XMLGenerator
{
  public static AttributesImpl convertToXmlAttributes( final iris.beans.AbstractBean bean )
  {
    <% schema.object_types.reverse.select{|o|!o.abstract?}.each do |object_type|
   name = object_type.name
   type = object_type.iris.classname
%>if( <%= type %>.class.isInstance( bean ) )
    {
      return convert<%= name %>ToXmlAttributes( (<%= type %>)bean );
    }
    else <% end %>
    {
      final String message = "Unable to validate bean: " + bean;
      throw new IllegalArgumentException( message );
    }
  }

  public static String xmlElementName( final iris.beans.AbstractBean bean )
  {
    <% schema.object_types.reverse.select{|o|!o.abstract?}.each do |object_type|
   name = object_type.name
   type = object_type.iris.classname
%>if( <%= type %>.class.isInstance( bean ) )
    {
      return <%= object_type.iris.classname %>.MODEL_NAME;
    }
    else <% end %>
    {
      final String message = "Unknown bean type: " + bean;
      throw new IllegalArgumentException( message );
    }
  }

<% schema.object_types.select{|o|!o.abstract?}.each do |object_type|
   name = object_type.name
   type = object_type.iris.classname
%>
  private static AttributesImpl convert<%= name %>ToXmlAttributes( final <%= type %> value )
  {
    final AttributesImpl attributes = new AttributesImpl();
<% object_type.attributes.select{|a|!a.reference? && a.persistent? && !a.iris.runtime_managed? && a.iris.client_side?}.each do |attribute|
  value_prefix = (attribute.attribute_type == :datetime) ? "iris.util.DateTimeUtilities.formatDateTime" : ""
  value_suffix = (attribute.attribute_type == :i_enum) ? ".name()" : ""
%>    attributes.addAttribute( "", <%= attribute.object_type.iris.classname %>.COLUMN_<%= uppercase_constantize(attribute.java.field_name) %>, <%= attribute.object_type.iris.classname %>.COLUMN_<%= uppercase_constantize(attribute.java.field_name) %>, "CDATA", String.valueOf( <%= value_prefix %>(value.get<%= attribute.java.field_name %>())<%= value_suffix %> ) );
<% end
%>
    return attributes;
  }
<% end %>
}