/* DO NOT EDIT: File is auto-generated */
package <%= to_package(data_module.arez.qualified_abstract_test_factory_name) %>;

@javax.annotation.Generated( "Domgen" )
@java.lang.SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
@edu.umd.cs.findbugs.annotations.SuppressFBWarnings( { "CE_CLASS_ENVY" } )
public abstract class <%= data_module.arez.abstract_test_factory_name %>
{
  private final com.google.inject.Injector _injector;

  protected <%= data_module.arez.abstract_test_factory_name %>( @javax.annotation.Nonnull final com.google.inject.Injector injector )
  {
    _injector = injector;
  }

<% data_module.repository.data_modules.select{|dm|dm.arez? && dm.name != data_module.name}.each do |dm| -%>
  protected final <%= dm.arez.qualified_test_factory_name %> <%= Reality::Naming.camelize(dm.name) %>()
  {
    return s( <%= dm.arez.qualified_test_factory_name %>.class );
  }

<% end -%>
<% data_module.entities.select{|e|e.arez?}.each do |entity| -%>
<% if entity.concrete? -%>
  public final void delete<%= entity.name %>( @javax.annotation.Nonnull final <%= entity.arez.qualified_name %> $_ )
  {
    <%= Reality::Naming.camelize(entity.dao.name) %>().destroy( $_ );
  }

<% entity.arez.test_create_defaults.each do |defaults| -%>
  @javax.annotation.Nonnull
  public final <%= entity.arez.qualified_name %> create<%= entity.name %>( <%= entity.attributes.select{|a| a.arez? && !defaults.has_attribute?(a.name) }.collect{|a| "#{annotated_type(a, :arez, :default, :final => true)} #{Reality::Naming.camelize(a.name)}"}.join(', ') %>)
  {
    return create<%= entity.name %>( <%= entity.attributes.select{|a|a.arez?}.collect {|a| defaults.has_attribute?(a.name) ? defaults.value_for(a.name) : Reality::Naming.camelize(a.name) }.join(', ') %> );
  }

<% end -%>
  @javax.annotation.Nonnull
  public final <%= entity.arez.qualified_name %> create<%= entity.name %>( <%= entity.attributes.select{|a| a.arez?}.collect{|a| "#{annotated_type(a, :arez, :default, :final => true)} #{Reality::Naming.camelize(a.name)}"}.join(', ') %>)
  {
<% needsLink = entity.attributes.any?{|a| a.reference? || a.remote_reference?} -%>
<% attributes = entity.attributes.select{|a|a.arez? && a.immutable?} + entity.attributes.select{|a|a.arez? && !a.immutable?} -%>
    <% if needsLink %>final <%= entity.arez.qualified_name %> $_ =<% else %>return<% end %> <%= Reality::Naming.camelize(entity.dao.name) %>().create( <%= attributes.select{|a|a.arez?}.collect do |a|
if a.reference?
  "#{a.nullable? ? "null == #{Reality::Naming.camelize(a.name)} ? null :" : ''}#{Reality::Naming.camelize(a.name) }.get#{a.referenced_entity.primary_key.name}()"
elsif a.remote_reference?
    "#{a.nullable? ? "null == #{Reality::Naming.camelize(a.name)} ? null :" : '' }#{Reality::Naming.camelize(a.name) }.get#{a.referenced_remote_entity.primary_key.name }()"
elsif a.date?
    "#{a.nullable? ? "null == #{Reality::Naming.camelize(a.name)} ? null :" : '' }#{ Reality::Naming.camelize(a.name)}.toString()"
else
    Reality::Naming.camelize(a.name)
  end
end.join(', ') -%> );
<% if needsLink -%>
    arez.Arez.context().safeAction( () -> arez.component.Linkable.link( $_ ), arez.ActionFlags.NO_VERIFY_ACTION_REQUIRED );
    return $_;
<% end -%>
  }
<% if entity.primary_key.generated_value? && entity.primary_key.integer? -%>

  @javax.annotation.Nonnull
  public final <%= entity.arez.qualified_name %> create<%= entity.name %>( <%= entity.attributes.select{|a| !a.primary_key? && a.arez?}.collect{|a| "#{annotated_type(a, :arez, :default, :final => true)} #{Reality::Naming.camelize(a.name)}"}.join(', ') %>)
  {
    return create<%= entity.name %>( <%= entity.attributes.select{|a| a.arez?}.collect{|a| a.primary_key? ? "org.realityforge.guiceyloops.shared.ValueUtil.nextID()" : "#{Reality::Naming.camelize(a.name)}"}.join(', ') %>);
  }
<% end -%>

<% end -%>
<% entity.attributes.select{|a|a.arez? && !a.immutable?}.each do |a| -%>
  public final void set<%= a.name %>( @javax.annotation.Nonnull final <%= entity.arez.qualified_name %> $_, <%= annotated_type(a, :arez, :default, :final => true) %> <%= Reality::Naming.camelize(a.name) %> )
  {
<% if a.reference? -%>
    safeAction( () -> $_.set<%= a.referencing_link_name %>( <%= a.nullable? ? "null == #{Reality::Naming.camelize(a.name)} ? null :" : '' %><%= Reality::Naming.camelize(a.name) %>.get<%= a.referenced_entity.primary_key.name %>() ) );
    arez.Arez.context().safeAction( () -> arez.component.Linkable.link( $_ ), arez.ActionFlags.NO_VERIFY_ACTION_REQUIRED );
<% elsif a.remote_reference? -%>
    safeAction( () -> $_.set<%= a.referencing_link_name %>( <%= a.nullable? ? "null == #{Reality::Naming.camelize(a.name)} ? null :" : '' %><%= Reality::Naming.camelize(a.name) %>.get<%= a.referenced_remote_entity.primary_key.name %>() ) );
    arez.Arez.context().safeAction( () -> arez.component.Linkable.link( $_ ), arez.ActionFlags.NO_VERIFY_ACTION_REQUIRED );
<% elsif a.date? -%>
    safeAction( () -> $_.set<%= a.name %>( <%= a.nullable? ? "null == #{Reality::Naming.camelize(a.name)} ? null : " : '' %><%= Reality::Naming.camelize(a.name) %>.toString() ) );
<% else -%>
    safeAction( () -> $_.set<%= a.name %>( <%= Reality::Naming.camelize(a.name) %> ) );
<% end -%>
  }

<% end -%>
<% end -%>
<% data_module.daos.select{|dao| dao.arez? && !dao.entity.abstract?}.each do |dao| -%>

  @javax.annotation.Nonnull
  protected final <%= dao.arez.qualified_repository_name %> <%= Reality::Naming.camelize(dao.name) %>()
  {
    return s( <%= dao.arez.qualified_repository_name %>.class );
  }
<%
  end
-%>

  @javax.annotation.Nonnull
  protected final <T> T s( @javax.annotation.Nonnull final Class<T> type )
  {
    return _injector.getInstance( type );
  }

  protected final void safeAction( @javax.annotation.Nonnull final arez.SafeProcedure action )
  {
    arez.Arez.context().safeAction( action );
  }

  protected final <T> T safeAction( @javax.annotation.Nonnull final arez.SafeFunction<T> action )
  {
    return arez.Arez.context().safeAction( action );
  }
}
