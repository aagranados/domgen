/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.gwt_rpc.qualified_async_callback_adapter_name) %>;

@javax.annotation.Generated( "Domgen" )
@java.lang.SuppressWarnings( { "unchecked", "rawtypes" } )
public abstract class <%= repository.gwt_rpc.async_callback_adapter_name %><T,N>
  implements com.google.gwt.user.client.rpc.AsyncCallback<T>
{
  @javax.annotation.Nullable
  private final com.google.gwt.user.client.rpc.AsyncCallback _globalCallback;
  @javax.annotation.Nullable
  private final <%= repository.gwt.qualified_async_callback_name %><N> _callback;
  @javax.annotation.Nullable
  private final <%= repository.gwt.qualified_async_error_callback_name %> _errorCallback;

  public <%= repository.gwt_rpc.async_callback_adapter_name %>( @javax.annotation.Nullable final com.google.gwt.user.client.rpc.AsyncCallback globalCallback, @javax.annotation.Nullable final <%= repository.gwt.qualified_async_callback_name %><N> callback, @javax.annotation.Nullable final <%= repository.gwt.qualified_async_error_callback_name %> errorCallback )
  {
    _globalCallback = globalCallback;
    _callback = callback;
    _errorCallback = errorCallback;
  }

  public void onFailure( final java.lang.Throwable caught )
  {
    if ( null != _errorCallback )
    {
      _errorCallback.onFailure( caught );
    }
    if ( null != _globalCallback )
    {
      _globalCallback.onFailure( caught );
    }
  }

  public void onSuccess( final T result )
  {
    if ( null != _callback )
    {
      _callback.onSuccess( convert( result ) );
    }
    if ( null != _globalCallback )
    {
      _globalCallback.onSuccess( result );
    }
  }

  protected abstract N convert( final T result );
}
