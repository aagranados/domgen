/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.graphql.qualified_endpoint_name) %>;

@javax.annotation.Generated( "Domgen" )
@java.lang.SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
@javax.servlet.annotation.WebServlet( name = "<%= repository.name %>.<%= repository.graphql.endpoint_name %>", urlPatterns = { <%= repository.graphql.endpoint_name %>.API_ENDPOINT<% if repository.graphql.graphiql? -%>, <%= repository.graphql.endpoint_name %>.INTERACTIVE_API_ENDPOINT<% end %> }, loadOnStartup = 1 )
public class <%= repository.graphql.endpoint_name %>
  extends graphql.servlet.DefaultGraphQLServlet
{
  public static final String API_ENDPOINT = "<%= repository.graphql.api_endpoint %>";
<% if repository.graphql.graphiql? -%>
  public static final String INTERACTIVE_API_ENDPOINT = "<%= repository.graphql.graphiql_api_endpoint %>";
<% end -%>
  @javax.inject.Inject
  private graphql.servlet.config.GraphQLSchemaProvider _provider;
  private transient graphql.servlet.input.GraphQLInvocationInputFactory _invocationInputFactory;

  @java.lang.Override
  public void init()
  {
    _invocationInputFactory = graphql.servlet.input.GraphQLInvocationInputFactory.newBuilder( _provider ).build();
    super.init();
  }

  @javax.annotation.Nonnull
  @java.lang.Override
  protected graphql.servlet.input.GraphQLInvocationInputFactory getInvocationInputFactory()
  {
    assert null != _invocationInputFactory;
    return _invocationInputFactory;
  }
}
