<% repository.data_modules.select{|dm| dm.graphql?}.each do |data_module| -%>
<% data_module.enumerations.select{|enumeration| enumeration.graphql?}.each do |enumeration| -%>
enum <%= enumeration.graphql.name %> {
<% enumeration.values.select{|value| value.graphql?}.each do |value| -%>
  <%= value.graphql.name %>
<% end -%>
}

<% end -%>
<% data_module.entities.select{|entity| entity.graphql?}.each do |entity| -%>
<%= entity.abstract? ? 'interface' : 'type' %> <%= entity.graphql.name %><%= entity.extends ? " implements #{entity.data_module.entity_by_name(entity.extends).graphql.name}" : '' %> {
<% entity.attributes.select{|attribute| attribute.graphql?}.each do |attribute| -%>
  <%= attribute.graphql.name %>: <%= attribute.collection? ? '[' : '' %><%= attribute.graphql.type %><%= attribute.collection? ? '!]' : '' %><%= attribute.nullable? ? '' : '!' %>
<% end -%>
<% entity.referencing_attributes.select{|attribute| attribute.inverse.graphql? && attribute.inverse.graphql.traversable? }.each do |attribute| -%>
  <%= Reality::Naming.pluralize(attribute.inverse.graphql.name) %>: <%= attribute.inverse.multiplicity == :many ? '[' : '' %><%= attribute.inverse.attribute.entity.graphql.name %><%= attribute.inverse.multiplicity == :many ? '!]' : '' %><%= attribute.nullable? ? '' : '!' %>
<% end -%>
}

<% end -%>
<% end -%>
<% repository.graphql.non_standard_scalars.each do |scalar| -%>
scalar <%= scalar %>
<% end -%>
