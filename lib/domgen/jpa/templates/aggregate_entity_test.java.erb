/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.jpa.qualified_aggregate_entity_test_name) %>;

@java.lang.SuppressWarnings( { "UnusedDeclaration" } )
@javax.annotation.Generated( "Domgen" )
public class <%= repository.jpa.aggregate_entity_test_name %>
{
  @org.testng.annotations.Test
  public void ensureTestsPresent()
    throws java.lang.Exception
  {
    // DAO tests
<%
  repository.data_modules.select{|dm|dm.jpa?}.each do |data_module|
    data_module.daos.select{|d|d.jpa? && d.queries.any?{|q|q.jpa? && !q.jpa.standard_query?}}.each do |dao|
-%>
    org.testng.Assert.assertFalse( java.lang.reflect.Modifier.isAbstract( <%= dao.jpa.qualified_concrete_dao_test_name %>.class.getModifiers() ) );
<% dao.queries.select{|q|q.jpa? && !q.jpa.standard_query?}.each do |query| -%>
    org.testng.Assert.assertNotNull( <%= dao.jpa.qualified_concrete_dao_test_name %>.class.getMethod( "<%= Reality::Naming.camelize(query.name) %>" ).getAnnotation( org.testng.annotations.Test.class ) );
<% end -%>
<%
  end
  end
-%>

    // Model tests
<%
  repository.data_modules.select{|dm|dm.jpa?}.each do |data_module|
    data_module.entities.select{|e|e.jpa? && e.jpa.non_standard_model_constraints?}.each do |entity|
-%>
    org.testng.Assert.assertFalse( java.lang.reflect.Modifier.isAbstract( <%= entity.jpa.qualified_model_test_name %>.class.getModifiers() ) );
<% entity.sql.constraints.select{|constraint| !constraint.standard?}.each do |constraint| -%>
    org.testng.Assert.assertNotNull( <%= entity.jpa.qualified_model_test_name %>.class.getMethod( "<%= Reality::Naming.camelize(constraint.name) %>Constraint" ).getAnnotation( org.testng.annotations.Test.class ) );
<% end -%>
<% entity.sql.function_constraints.select{|constraint| !constraint.standard?}.each do |constraint| -%>
    org.testng.Assert.assertNotNull( <%= entity.jpa.qualified_model_test_name %>.class.getMethod( "<%= Reality::Naming.camelize(constraint.name) %>FunctionConstraint" ).getAnnotation( org.testng.annotations.Test.class ) );
<% end -%>
<% entity.sql.validations.select{|validation| !validation.standard?}.each do |validation| -%>
    org.testng.Assert.assertNotNull( <%= entity.jpa.qualified_model_test_name %>.class.getMethod( "<%= Reality::Naming.camelize(validation.name) %>Validation" ).getAnnotation( org.testng.annotations.Test.class ) );
<% end -%>
<%
    end
  end
-%>
  }
}
