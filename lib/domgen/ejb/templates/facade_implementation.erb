/* DO NOT EDIT: File is auto-generated */
package <%= service.data_module.ejb.service_package %>;

@SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
@javax.ejb.Stateless( name = <%= service.ejb.facade_interface_name %>.EJB_NAME )
@javax.ejb.TransactionAttribute( javax.ejb.TransactionAttributeType.REQUIRES_NEW )
<% if service.jws? %>@javax.jws.WebService( endpointInterface = <%= service.jws.qualified_service_name %>.SERVICE_NAME, serviceName = "<%= service.data_module.repository.jws.service_name %>", name = "<%= service.jws.name %>" )<% end %>
public class <%= service.ejb.facade_implementation_name %>
<%= service.ejb.facade_extends ? "  extends #{service.ejb.facade_extends}" : "" %>
  implements <%= service.ejb.facade_interface_name %><% if service.jws? %>, <%= service.jws.qualified_service_name %><% end %>
{
<% service.methods.collect {|method|method.parameters.select{|parameter|parameter.reference?}.collect{|parameter|parameter.referenced_entity}}.flatten.sort{|a,b| a.name.to_s <=> b.name.to_s }.uniq.each do |entity| %>
  @javax.ejb.EJB
  private <%= entity.jpa.qualified_dao_name %> _<%= entity.qualified_name.gsub('.','') %>DAO;
<% end %>
  @javax.ejb.EJB
  private <%= service.ejb.service_name %> _service;

<% service.methods.each do |method|
%>  public <%= annotated_type(method.return_value, :ejb, :transport) %> <%= Domgen::Naming.camelize(method.name) %>(<%= method.parameters.collect{|p| "final #{annotated_type(p, :ejb, :transport)} #{p.name}" }.join(', ') %>)<%=
    method.exceptions.empty? ? '' : "\n    throws #{method.exceptions.collect{|e| e.ejb.qualified_name}.join(', ')}"
%><%
   return_prefix = ''
   transform = ''
   if method.return_value.return_type != :void
     if method.return_value.ejb.java_type == method.return_value.ejb.java_type(:transport)
       return_prefix = "return "
     else
       return_prefix = "#{annotated_type(method.return_value, :ejb)} value = "
       transform = "return #{modality_default_to_transport("value",method.return_value,:ejb)};"
     end
   end
%>
  {
  <%= return_prefix  %>_service.<%= Domgen::Naming.camelize(method.name) %>(<%= method.parameters.collect{|parameter| "(#{modality_transport_to_default(parameter.name, parameter, :ejb)})" }.join(', ') %>);
  <%= transform %>
  }

<% end %>}
