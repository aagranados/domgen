/* DO NOT EDIT: File is auto-generated */
package <%= to_package(entrypoint.qualified_entrypoint_dagger_module_name) %>;

@javax.annotation.Generated( "Domgen" )
@dagger.Module( includes = { } )
public class <%= entrypoint.entrypoint_dagger_module_name %>
{
  private static <%= entrypoint.qualified_application_name %> c_app;

  public static void setApp( @javax.annotation.Nonnull final <%= entrypoint.qualified_application_name %> app )
  {
    c_app = app;
  }

  public static class AppProvider
    implements javax.inject.Provider<<%= entrypoint.qualified_application_name %>>
  {
    @Override
    public <%= entrypoint.qualified_application_name %> get()
    {
      assert null != c_app;
      return c_app;
    }
  }

  protected void configure()
  {
    install( new <%= entrypoint.gwt_repository.repository.gwt.qualified_aggregate_dagger_module_name %>() );
<% if entrypoint.gwt_repository.repository.iris_audit? -%>
    install( new iris.audit.client.ioc.AuditClientDaggerModule() );
    install( new iris.audit.client.ioc.AuditDaggerModule() );
<% end -%>
<% if entrypoint.gwt_repository.repository.imit? -%>
    install( new org.realityforge.replicant.client.gwt.ReplicantDaggerModule() );
    install( new org.realityforge.replicant.client.runtime.gwt.ReplicantNetworkDaggerModule() );
<% end -%>
    bind( <%= entrypoint.qualified_application_name %>.class ).toProvider( AppProvider.class ).asEagerSingleton();
  }
<% if entrypoint.gwt_repository.repository.keycloak? -%>

  @com.google.inject.Provides
  @javax.inject.Singleton
  public org.realityforge.gwt.keycloak.Keycloak getKeycloak( @javax.annotation.Nonnull final <%= entrypoint.qualified_application_name %> app )
  {
    return app.getKeycloak();
  }
<% end -%>
}
