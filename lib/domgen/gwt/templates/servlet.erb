/* DO NOT EDIT: File is auto-generated */
package <%= service.data_module.gwt.server_package %>;

<%= description_javadoc_for(service, "") %>@javax.annotation.Generated( "Domgen" )
@SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
@javax.servlet.annotation.WebServlet( name = "<%= service.data_module.name %>.<%= service.gwt.servlet_name %>", urlPatterns = { "/<%= service.data_module.repository.gwt.module_name %>/" + <%= service.gwt.qualified_service_name %>.PATH } )
public class <%= service.gwt.servlet_name %>
  extends com.google.gwt.user.server.rpc.<%= service.gwt.xsrf_protected? ? "XsrfProtectedServiceServlet" : "RemoteServiceServlet" %>
  implements <%= service.gwt.qualified_service_name %>
{
  @javax.ejb.EJB
  private <%= service.ejb.generate_facade? ? service.ejb.qualified_facade_interface_name : service.ejb.qualified_service_name %> _service;

<% service.methods.each do |method|
%><%= description_javadoc_for(method)
%>  public <%= annotated_type(method.return_value, :gwt, :transport) %> <%= method.gwt.name %>(<%= method.parameters.collect{|p| "#{annotated_type(p, :gwt, :transport)} #{p.gwt.name}" }.join(', ') %>)<%=
    method.exceptions.empty? ? '' : "\n    throws #{method.exceptions.collect{|e| e.gwt.qualified_name}.join(', ')}"
%>
  {
<% if !method.exceptions.empty?
%>    try
    {
<% end %>
    <%= method.return_value.return_type != :void ? "return ": "" %>_service.<%= method.gwt.name %>(<%= method.parameters.collect do |p|
  if p.date?
    "org.realityforge.replicant.client.RDate.toDate( #{p.gwt.name} )"
  else
    "#{p.gwt.name}"
  end
end.join(', ') %>);
<% if !method.exceptions.empty?
%>    }
<% method.exceptions.each do |exception| %>
    catch ( final <%= exception.ejb.qualified_name %> ignored )
    {
        throw new <%= exception.gwt.qualified_name %>();
    }
<% end %>
<% end %>
  }
<% end %>}
