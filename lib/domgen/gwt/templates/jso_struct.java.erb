/* DO NOT EDIT: File is auto-generated */
package <%= struct.data_module.gwt.client_data_type_package %>;

<%= description_javadoc_for(struct, "") %>@javax.annotation.Generated( "Domgen" )
@SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
public class <%= struct.gwt.jso_name %>
  extends com.google.gwt.core.client.JavaScriptObject
  implements <%= struct.gwt.interface_name %>
{
<% struct.fields.select{|f|!f.collection? && !f.enumeration?}.each do |field|
%>
  public native <%= annotated_type(field, :gwt, :boundary) %> <%= getter_prefix(field) %><%= field.name %>() /*-{ return this.<%= field.json.name %>;  }-*/;
  protected native void set<%= field.name %>( <%= annotated_type(field, :gwt, :boundary) %> value ) /*-{ this.<%= field.json.name %> = value;  }-*/;
<% end
   struct.fields.select{|f|f.enumeration?}.each do |field|
%>
  public final <%= annotated_type(field, :gwt, :boundary) %> <%= getter_prefix(field) %><%= field.name %>()
  {
    return <%= field.gwt.java_type %>.valueOf( <%= "#{getter_prefix(field)}#{field.name}" %>0() );
  }

  private final native String <%= getter_prefix(field) %><%= field.name %>0() /*-{
    return this.<%= field.json.name %>;
  }-*/;

  private final native void set<%= field.name %>( String value ) /*-{
    this.<%= field.json.name %> = value;
  }-*/;
<%
end
struct.fields.select{|f|f.collection?}.each do |field|
%>
  private native com.google.gwt.core.client.JavaScriptObject <%= getter_prefix(field) %><%= field.name %>0() /*-{ return this.<%= field.json.name %>;  }-*/;

  protected native void set<%= field.name %>( final com.google.gwt.core.client.JavaScriptObject value ) /*-{ this.<%= field.json.name %> = value;  }-*/;

  public final <%= annotated_type(field, :gwt, :boundary) %> <%= getter_prefix(field) %><%= field.name %>()
  {
    return org.realityforge.replicant.client.JsoUtil.toList( <%= getter_prefix(field) %><%= field.name %>0() );
  }
<% end
%>

  protected static <%= struct.gwt.jso_name %> create( <%= struct.fields.collect {|field| "final #{annotated_type(field, :gwt, :boundary) } #{field.name}" }.join(", ") %> )
  {
    final <%= struct.gwt.jso_name %> entity = com.google.gwt.core.client.JavaScriptObject.createObject().cast();
<% struct.fields.each do |field|
    converted_value = Proc.new do |var|
      case
        when field.struct? then "(#{field.referenced_struct.gwt.jso_name})#{var}"
        when field.date? then "#{var}.toString()"
        when field.enumeration? then "#{var}.name()"
        else "#{var}"
      end
    end
     if :none == field.collection_type
%>    entity.set<%= field.name %>( <%= converted_value.call(field.name) %> );
<%     else
    gwt_type =
      case
        when field.date? || field.text? || field.enumeration? then "com.google.gwt.core.client.JsArrayString"
        when field.integer? then "com.google.gwt.core.client.JsArrayInteger"
        when field.boolean? then "com.google.gwt.core.client.JsArrayBoolean"
        when field.struct? then "com.google.gwt.core.client.JsArray<#{field.referenced_struct.gwt.qualified_jso_name}>"
        else (raise "Unsupported field type #{field.name}")
      end
    gwt_creator =
      case
        when field.date? || field.text? || field.enumeration? then "StringArray"
        when field.integer? then "IntegerArray"
        when field.boolean? then "BooleanArray"
        when field.struct? then "ObjectArray"
        else (raise "Unsupported field type #{field.name}")
      end
%>
    final <%= gwt_type %> $<%= field.name %> = newNative<%= gwt_creator %>();
    for ( final <%= field.gwt.java_component_type %> v : <%= field.name %> )
    {
      $<%= field.name %>.push( <%= converted_value.call("v") %> );
    }

    entity.set<%= field.name %>( $<%= field.name %> );
<%   end
   end
%>    return entity;
  }

  private static native com.google.gwt.core.client.JsArrayString newNativeStringArray() /*-{ return []; }-*/;
  private static native com.google.gwt.core.client.JsArrayInteger newNativeIntegerArray() /*-{ return []; }-*/;
  private static native <E extends com.google.gwt.core.client.JavaScriptObject> com.google.gwt.core.client.JsArray<E> newNativeObjectArray() /*-{ return []; }-*/;

<% if struct.top_level? %>
  protected static <%= struct.gwt.qualified_jso_name %> as<%= struct.name %>( final String json )
  {
    return com.google.gwt.core.client.JsonUtils.safeEval( json );
  }
<% end
%>
}
